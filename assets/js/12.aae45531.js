(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{172:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("blockquote",[a("p",[t._v("原文来自："),a("a",{attrs:{href:"https://30secondsofinterviews.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://30secondsofinterviews.org/"),a("OutboundLink")],1),t._v("、")])]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),a("p",[t._v("面试官想听到的：")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),a("p",[t._v("浏览器具有用于将网站文件临时存储的缓存，因此在页面切换之间相同的页面时不需要重新下载。\n服务器通过设置发送响应头告诉浏览在给予的时间内存储文件。这大大提升了网站的速度和保留了带宽。")]),t._v(" "),a("p",[t._v("然而，当开发者已经更改网站内容时，它可能会导致问题，因为用户的缓存仍然引用旧的文件。如果缓存的 CSS 和 JavaScript 文件引用的元素已经不存在、已经移动或者重命名，则会使它们保留旧的功能或者破坏网站。")]),t._v(" "),a("p",[t._v("清除缓存是一种强制浏览器下载新文件的过程。这是通过将文件命名为与旧文件不同的名字来实现的。")]),t._v(" "),a("p",[t._v("强制浏览器重新下载文件的一种技术在文件的末尾附加一个查询字符串。")]),t._v(" "),t._m(6),t._v(" "),a("p",[t._v("这样浏览器认为它是不同的文件，但不需要更改文件名。")]),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),a("p",[t._v("这里有一个在标签上使用类名的例子：")]),t._v(" "),t._m(11),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),a("p",[t._v("这些必须链接到元素的末尾，不应该单独使用，否则会导致作用域问题。")]),t._v(" "),t._m(15),a("p",[t._v("面试官想听到的：")]),t._v(" "),a("ul",[a("li",[t._v("替代的解决作用域问题的方案类似 CSS-in-JS，"),a("a",{attrs:{href:"https://github.com/tuchk4/awesome-css-in-js/blob/master/README-ZH_CN.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("awesome-css-in-js"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("其他的方案（Vue的 scoped css）、css modules")]),t._v(" "),a("li",[t._v("扩展："),a("a",{attrs:{href:"https://juejin.im/post/5c25de5f6fb9a04a053fbf53",target:"_blank",rel:"noopener noreferrer"}},[t._v("css 命名：BEM, scoped css, css modules 与 css-in-js"),a("OutboundLink")],1)])]),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),a("p",[t._v("面试官想听到的：")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),a("p",[t._v("三重等号（===）检查是严格相等，意味着符号两边变量的类型和值都必须相同。\n双重等号（==）会进行类型的强制转换，因此两个变量的类型都相同后再进行严格的比较。")]),t._v(" "),a("p",[t._v("面试官想听到的：")]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),a("p",[t._v("一个元素是一个纯 JavaScript 对象，用来描述一个 DOM 节点或者一个组件。元素是干净的，从来不会被改变，并且很容易创建。")]),t._v(" "),t._m(23),t._v(" "),t._m(24),a("p",[t._v("好的回答是：")]),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),a("p",[t._v("两种方式都会使变量的值加1。不同的是它们赋值的时机。")]),t._v(" "),a("p",[t._v("后缀增量运算符会在变量的值被增加前，给变量赋值。")]),t._v(" "),t._m(27),a("p",[t._v("前缀增量运算符会在变量的值被增加后，给变量赋值。")]),t._v(" "),t._m(28),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),t._m(34),t._v(" "),t._m(35),a("p",[t._v("好的回答：")]),t._v(" "),t._m(36),t._v(" "),t._m(37),t._v(" "),t._m(38),t._v(" "),a("p",[t._v("很高兴听到：")]),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),t._m(41),a("p",[t._v("我们必须保证可以获得食谱上所有的成分，并且数量上大于或等于成分要求的单位数量。**一旦缺失一种成分或数量上不足，我们都不能完成一次处理。**关键入手点在于这里，因此需要找出所有成分的比率值的最小值，才是整个能够按照食谱烹饪的最大值。")]),t._v(" "),t._m(42),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),t._m(45),t._v(" "),t._m(46),t._m(47),t._v(" "),t._m(48),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),a("p",[t._v("好的回答：")]),t._v(" "),t._m(52),t._v(" "),t._m(53),t._v(" "),a("p",[t._v("回调就是一个函数，作为一个参数被传入另外一个函数中，当一个事件发生后或者一个确定的任务执行后将会被执行，通常被用于异步的代码。回调函数除了可以被一段代码不久后调用外，它也可以在初始化时声明而不被调用。")]),t._v(" "),a("p",[t._v("例如，事件监听器是异步回调的，只有当指定的事件发生时，它才会被执行。")]),t._v(" "),t._m(54),t._m(55),t._v(" "),t._m(56),a("p",[t._v("很高兴听到")]),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),a("p",[t._v("使用对象扩展运算符，可以把该对象自身可枚举的属性拷贝到新的对象中。这种方法实现的是浅拷贝。")]),t._v(" "),t._m(59),a("p",[t._v("使用这个方式不会拷贝原型链的东西。另外，嵌套的对象也不被拷贝，相反它们的引用地址会被拷贝，所以嵌套对象仍让跟原对象一样指向相同的对象。深拷贝是一种更复杂的拷贝方式，为了有效地拷贝可能会被嵌入到对象里的任何对象类型（日期、正则表达式、函数、Set等等）。")]),t._v(" "),a("p",[t._v("其他可选的方案包括：")]),t._v(" "),t._m(60),t._v(" "),a("p",[t._v("很高兴能听到：")]),t._v(" "),t._m(61),t._v(" "),t._m(62),t._v(" "),t._m(63),t._v(" "),t._m(64),t._v(" "),a("p",[t._v("注意：这种方案没有企图去测试除了纯对象、数组、函数、日期以及原始值类型之外的数据结构的相等。")]),t._v(" "),t._m(65),a("p",[t._v("很高兴听到：")]),t._v(" "),t._m(66),t._v(" "),t._m(67),t._v(" "),t._m(68),t._v(" "),t._m(69),t._v(" "),t._m(70),t._v(" "),a("p",[t._v("很高兴听到：")]),t._v(" "),t._m(71),t._v(" "),t._m(72),t._v(" "),a("p",[t._v("DOM（Document Object Model）是一个跨平台的 API，它可以把 HTML 和 XML 文档处理成一颗由节点组成的树。这些节点（如元素和文本节点）都是对象，可以被编程式地操作以及任何对于它们的视觉上的改变都会生动映射到文档中。在浏览中，这个 API 可以被 JavaScript 访问，可以使用 JavaScript 操作 DOM 节点的样式、内容、文档中的位置，或者是通过事件监听器进行交互。")]),t._v(" "),a("p",[t._v("很高兴能听到：")]),t._v(" "),t._m(73),t._v(" "),t._m(74),t._v(" "),a("p",[t._v("事件委托是一种委将事件委派到单个共同祖先元素的技术。由于事件冒泡，")]),t._v(" "),t._v("事件通过在每个祖先元素上逐步执任何处理程序“冒泡”到 DOM 树，直到可能正在监听它的根。\n"),t._m(75),t._v(" "),a("p",[t._v("它有两个优点：")]),t._v(" "),t._m(76),t._v(" "),a("p",[t._v("而不是：")]),t._v(" "),t._m(77),a("p",[t._v("事件委托涉及使用条件判断来确保子目标匹配我们需要的元素：")]),t._v(" "),t._m(78),a("p",[t._v("面试官想要听到的：")]),t._v(" "),t._m(79),t._v(" "),t._m(80),t._v(" "),a("p",[t._v("在 JavaScript 中有两种主要的语法类别：表达式和声明。第三种是两者结合，称为表达式语句。它们可以粗略地概括为：\n")]),t._v(" "),t._m(81),t._v(" "),a("p",[t._v("一个普遍认可的规则：")]),t._v(" "),t._m(82),t._v(" "),t._m(83),t._v(" "),t._m(84),t._v(" "),a("p",[t._v("语句显示为可以执行某些动作但不会产生值的命令。")]),t._v(" "),t._m(85),t._m(86),t._v(" "),t._m(87),t._v(" "),a("p",[t._v("表达式产生一个值。因为编译器将它们替替换为要解析的值，所以可以传递给函数中。")]),t._v(" "),t._m(88),t._m(89),t._v(" "),a("p",[t._v("以前使用条件操作符作为表达式使用的语句集的等效版本。")]),t._v(" "),t._m(90),t._v(" "),t._m(91),t._v(" "),t._m(92),t._v(" "),a("ul",[a("li",[t._v("函数声明 vs 函数表达式。具体看这篇文"),a("a",{attrs:{href:"https://github.com/Wscats/articles/issues/73",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于Javascript的函数声明和函数表达式"),a("OutboundLink")],1)])]),t._v(" "),t._m(93),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://muyiy.cn/question/",target:"_blank",rel:"noopener noreferrer"}},[t._v("壹题汇总"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("《CSS 世界》")])])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"_30-秒面试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_30-秒面试","aria-hidden":"true"}},[this._v("#")]),this._v(" 30 秒面试")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"html"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html","aria-hidden":"true"}},[this._v("#")]),this._v(" HTML")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"img-图片标签上-的alt-属性的作用是什么？easy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#img-图片标签上-的alt-属性的作用是什么？easy","aria-hidden":"true"}},[this._v("#")]),this._v(" img 图片标签上 的"),s("code",[this._v("alt")]),this._v(" 属性的作用是什么？"),s("sup",{staticStyle:{color:"green"}},[this._v("Easy")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果用户无法查看图像时，则"),s("code",[this._v("alt")]),this._v(" 属性提供图像的替代信息。\n"),s("code",[this._v("alt")]),this._v(" 属性应该用来描述除了那些仅用于装饰目的图像之外的任何图像\n，在这种情况下，图片的 "),s("code",[this._v("alt")]),this._v(" 属性值应该留空。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("装饰图像应该拥有一个空的 "),a("code",[t._v("alt")]),t._v(" 属性。")]),t._v(" "),a("li",[t._v("Web 爬虫使用"),a("code",[t._v("alt")]),t._v(" 标签来理解图像内容，所以它们被认为对搜索引擎（SEO）优化很重要。")]),t._v(" "),a("li",[t._v("把 "),a("code",[t._v(".")]),t._v(" 放在 "),a("code",[t._v("alt")]),t._v(" 标签末尾来提供网站的可访问性。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"缓存清除的目的是什么，如何实现？easy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缓存清除的目的是什么，如何实现？easy","aria-hidden":"true"}},[this._v("#")]),this._v(" 缓存清除的目的是什么，如何实现？"),s("sup",{staticStyle:{color:"green"}},[this._v("Easy")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[s("code",[this._v('src="js/script.js"')]),this._v(" => "),s("code",[this._v('scr="js/script.js?v=2"')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css","aria-hidden":"true"}},[this._v("#")]),this._v(" CSS")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"css-bem-是什么？easy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-bem-是什么？easy","aria-hidden":"true"}},[this._v("#")]),this._v(" CSS BEM 是什么？"),s("sup",{staticStyle:{color:"green"}},[this._v("Easy")])])},function(){var t=this.$createElement;return(this._self._c||t)("p",[this._v("BEM 方法是 一种 CSS 类的命名约定，旨在通过定义命名空间解决作用域问题来使 CSS代码 更具可维护性。BEM 主张块级元素修饰符，这是对自身结构的解释。\n"),this._v("\n块就是一个独立组件，可在项目中重复利用，它充当子组件（元素）的“命名空间”。\n"),this._v("\n当块或元素处于一种特定状态或者是结构或样式不同时，修饰符用作标记。\n")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("/* block component */")]),t._v("\n"),a("span",{attrs:{class:"token selector"}},[t._v(".block")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("/* element */")]),t._v("\n"),a("span",{attrs:{class:"token selector"}},[t._v(".block__element")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("/* modifier */")]),t._v("\n"),a("span",{attrs:{class:"token selector"}},[t._v(".block__element--modifier")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("nav")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("navbar"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("navbar__link navbar__link--active"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("navbar__link"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("navbar__link"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("nav")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("在这个例子中，"),a("code",[t._v("navbar")]),t._v(" 是一个块，"),a("code",[t._v("navbar__link")]),t._v(" 是一个元素，离开 "),a("code",[t._v("navbar")]),t._v(" 组件是没有意义的。"),a("code",[t._v("navbar__link--active")]),t._v(" 则是一个修饰符用来表明 "),a("code",[t._v("navbar__link")]),t._v(" 元素的不同状态。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("因为修饰符是冗余的，更多选择是使用 "),s("code",[this._v("is-*")]),this._v(" 标记来替代修饰符。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("<")]),t._v("a")]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("href")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{attrs:{class:"token attr-name"}},[t._v("class")]),a("span",{attrs:{class:"token attr-value"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{attrs:{class:"token punctuation"}},[t._v('"')]),t._v("navbar_link is-active"),a("span",{attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token tag"}},[a("span",{attrs:{class:"token punctuation"}},[t._v("</")]),t._v("a")]),a("span",{attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{attrs:{class:"token selector"}},[this._v(".navbar__link.is-active")]),this._v(" "),s("span",{attrs:{class:"token punctuation"}},[this._v("{")]),this._v("\n"),s("span",{attrs:{class:"token punctuation"}},[this._v("}")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"使用-css-预处理器的优点是什么？easy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-css-预处理器的优点是什么？easy","aria-hidden":"true"}},[this._v("#")]),this._v(" 使用 CSS 预处理器的优点是什么？"),s("sup",{staticStyle:{color:"green"}},[this._v("Easy")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("CSS 预处理器添加了原生 CSS 不具有的实用功能，并且总体上通过 DRY（不要重复你自己）原则让 CSS 代码更加整洁和更具可维护性。\n"),t._v("它们对于嵌套选择器的简洁减少了重复代码。\n它们为实现一致的主题（然而，CSS 变量已经很大程度上取代了这个功能）提供了变量和额外的工具如颜色函数（"),a("code",[t._v("lighten")]),t._v("， "),a("code",[t._v("darken")]),t._v("，"),a("code",[t._v("transparenntize")]),t._v("，等等）、mixins，loop等其他工具，这些工具让CSS更像是一种真正的编程语言，并为开发人员提供了生成复杂 CSS 的更多能力。\n")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("它们允许我们写出更具可维护性和可扩展性的 CSS 代码。")]),this._v(" "),s("li",[this._v("使用 CSS 处理器的一些缺点（配置，重新编译的时间可能会变慢，等等）。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"javascript"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript","aria-hidden":"true"}},[this._v("#")]),this._v(" JavaScript")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"等号运算符-和-有什么区别呢？easy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#等号运算符-和-有什么区别呢？easy","aria-hidden":"true"}},[this._v("#")]),this._v(" 等号运算符 "),s("code",[this._v("==")]),this._v(" 和 "),s("code",[this._v("===")]),this._v(" 有什么区别呢？"),s("sup",{staticStyle:{color:"green"}},[this._v("Easy")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("无论什么时候，我们都应该使用三重等号比较两个变量是否相等，因为双重等号会有不直观的结果。")]),this._v(" "),s("li",[this._v("提及下 "),s("code",[this._v("falsy")]),this._v(" 值的比较，如 0 和 false。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"react-的元素和组件有什么区别？easy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-的元素和组件有什么区别？easy","aria-hidden":"true"}},[this._v("#")]),this._v(" React 的元素和组件有什么区别？"),s("sup",{staticStyle:{color:"green"}},[this._v("Easy")])])},function(){var t=this.$createElement;return(this._self._c||t)("p",[this._v("一个组件就是一个函数或者一个类。组件可以拥有自己的状态 state，以及提供 props 作为输入，并且输出一颗元素树（但是它们可以作为一个普通容器或包裹，而且不需要输出 dom 节点）。组件在初始化生命周期方法时具有副作用"),this._v("（例如，AJAX 请求，DOM 操作，引入第三方库的接口）并且创造成本比较高。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token function-variable function"}},[t._v("Component")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Hello"')]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" componentElement "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("Component "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" domNodeElement "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("元素是不可改变的纯对象，可以用来描述任何你想要渲染的 dom 节点或者组件。")]),this._v(" "),s("li",[this._v("组件可以是一个函数或者是一个类，它接受 props 作为输入，以及输出一颗元素树。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"后缀增量运算符-i-和-前缀增量运算符-i-有什么区别？easy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后缀增量运算符-i-和-前缀增量运算符-i-有什么区别？easy","aria-hidden":"true"}},[this._v("#")]),this._v(" 后缀增量运算符 "),s("code",[this._v("i++")]),this._v(" 和 前缀增量运算符"),s("code",[this._v("++i")]),this._v(" 有什么区别？"),s("sup",{staticStyle:{color:"green"}},[this._v("Easy")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\ni"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// i === 1")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),t._v("i "),a("span",{attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{attrs:{class:"token comment"}},[t._v("// i === 1")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"promise-可以处于几种状态？easy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise-可以处于几种状态？easy","aria-hidden":"true"}},[this._v("#")]),this._v(" Promise 可以处于几种状态？"),s("sup",{staticStyle:{color:"green"}},[this._v("Easy")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("一个 "),s("code",[this._v("Promise")]),this._v(" 可以处于这些状态的其中之一：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("pending: 初始状态，既没有完成也没有拒绝。")]),this._v(" "),s("li",[this._v("fulfilled: 这个状态意味着操作已经成功完成。")]),this._v(" "),s("li",[this._v("rejected: 这个状态意味着操作失败。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("一个"),s("code",[this._v("pending")]),this._v("状态的 Promise 结果可以是完成附带一个值，或者是拒绝附带一个原因（错误）。当这些选择之一发生后，相关的处理程序会被这个 Promise 的 then 方法依次调用。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"在-react-中，什么是一个有状态的组件？easy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-react-中，什么是一个有状态的组件？easy","aria-hidden":"true"}},[this._v("#")]),this._v(" 在 React 中，什么是一个有状态的组件？"),s("sup",{staticStyle:{color:"green"}},[this._v("Easy")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("一个有状态的组件，它的行为依赖于它自身的状态。这意味着两个独立的组件实例，即使给予相同的 "),s("code",[this._v("props")]),this._v(" 值，也不一定会给予相同的输出，它跟纯函数组件是不一样的。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// Stateful class component")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("App")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("constructor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("super")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    thsi"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" count"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token function"}},[t._v("render")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// Stateful function component")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("App")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("count"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setCount"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("useState")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("有状态的组件有内部依赖的状态。")]),this._v(" "),s("li",[this._v("有状态的组件可以是类组件或者是使用了状态钩子的函数组件。")]),this._v(" "),s("li",[this._v("有状态的组件有它们自身的状态，这些状态通过构造函数或 "),s("code",[this._v("useState()")]),this._v("初始化。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"什么是一个无状态的组件easy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是一个无状态的组件easy","aria-hidden":"true"}},[this._v("#")]),this._v(" 什么是一个无状态的组件"),s("sup",{staticStyle:{color:"green"}},[this._v("Easy")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("一个无状态组件是一个自身行为不依赖它自己的状态 "),s("code",[this._v("state")]),this._v("。无状态的组件可以是函数式组件或者是类组件。因为给无状态组件输入相同的 "),s("code",[this._v("props")]),this._v(" 会保证得到相同的输出，所以它更容易被维护和测试。在你不需要使用生命周期钩子的时候，你应该优先考虑使用无状态的函数式组件。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("无状态组件和它们的状态是独立的。")]),this._v(" "),s("li",[this._v("无状态组件可以是类组件或函数式组件。")]),this._v(" "),s("li",[this._v("无状态组件完全没有 "),s("code",[this._v("this")]),this._v(" 上下文。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"创建一个批处理函数，它返回该批中的能够按照食谱进行烹饪的最多次数。intermediate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个批处理函数，它返回该批中的能够按照食谱进行烹饪的最多次数。intermediate","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建一个批处理函数，它返回该批中的能够按照食谱进行烹饪的最多次数。"),s("sup",{staticStyle:{color:"green"}},[this._v("INTERMEDIATE")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("/**\n 这个函数接收两个对象作为参数：第一个对象是食谱上要求的成分表，而第二个对象是当前能够使用的成分。每一种成分的值是代表它们的单位数量有多少。\n `batches(recipe, available)`\n*/")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 0 batches can be made")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("batches")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" milk"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("100")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" butter"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("50")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flour"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" milk"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("132")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" butter"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("48")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flour"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("51")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("batches")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" milk"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("100")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flour"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sugar"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" butter"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" milk"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1288")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" flour"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("9")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sugar"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("95")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 1 batch can be made")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("batches")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" milk"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("100")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" butter"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("50")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cheese"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" milk"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("198")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" butter"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("52")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cheese"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("10")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 2 batches can be made")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("batches")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" milk"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sugar"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("40")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" butter"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("20")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" milk"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sugar"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("120")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" butter"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("500")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("第一步，使用"),a("code",[t._v("Object.keys()")]),t._v("以数组形式返回食谱的成分\n然后使用 "),a("code",[t._v("Array.prototype.map()")]),t._v(" 针对每种可以获得的成分的数量与菜谱上要求的成分数量作比例处理。"),t._v("只要有一个菜谱上要求的成分不可用，则比率值就等于 "),a("code",[t._v("NaN")]),t._v("。因此在这种情况下，需要使用逻辑与符号赋值为0。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("第二步，使用展开序列符"),s("code",[this._v("...")]),this._v("展开成分的比率值数组，传递给"),s("code",[this._v("Math.min()")]),this._v("函数获得最小的比率。最后传递这个比率给"),s("code",[this._v("Math.floor()")]),this._v("向上兼容取整获得整个批处理的最大数值。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token function-variable function"}},[t._v("batches")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("recipe"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" available"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" \n  Math"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("floor")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    Math"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("min")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("Object"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("keys")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("recipe"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("map")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" available"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v(" recipe"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"创建一个功能上相当于方法function-prototype-bind的单例函数-bindintermediate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建一个功能上相当于方法function-prototype-bind的单例函数-bindintermediate","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建一个功能上相当于方法"),s("code",[this._v("Function.prototype.bind")]),this._v("的单例函数 "),s("code",[this._v("bind")]),s("sup",{staticStyle:{color:"green"}},[this._v("INTERMEDIATE")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("example")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" boundExample "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("bind")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("example"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nboundExample"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("call")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("b"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// logs { a: true }")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("返回一个接收任意数量参数的函数，这些参数通过扩展运算符"),s("code",[this._v("...")]),this._v("来获取。从函数上可以看出，它返回通过"),s("code",[this._v("Function.prototype.apply")]),this._v("方法接收上下文 context 以及一个数组形式的参数来调用"),s("code",[this._v("fn")]),this._v("函数的结果。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token function-variable function"}},[t._v("bind")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fn"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" fn"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("apply")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" args"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"回调函数作为setstate-的一个参数的目的是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回调函数作为setstate-的一个参数的目的是什么？","aria-hidden":"true"}},[this._v("#")]),this._v(" 回调函数作为"),s("code",[this._v("setState")]),this._v(" 的一个参数的目的是什么？")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当 "),s("code",[this._v("setState")]),this._v(" 执行和组件渲染完成后，这个回调函数将会被调用。因为 "),s("code",[this._v("setState")]),this._v(" 的执行是异步的，所以回调函数可以用在任何一次 post 操作。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token function"}},[t._v("setState")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"sudheer"')]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"The name has updated and component re-rendered"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("这个回调函数将会在 "),s("code",[this._v("setState")]),this._v("执行后被调用，并且可以用在任意一次的 post 动作。")]),this._v(" "),s("li",[this._v("建议使用生命周期方法而不是这个 callback 回调函数。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"什么是回调？你可以举一个例子来说明吗？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是回调？你可以举一个例子来说明吗？","aria-hidden":"true"}},[this._v("#")]),this._v(" 什么是回调？你可以举一个例子来说明吗？")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("onClick")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("log")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"The user clicked on the page."')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ndocument"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"click"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" onClick"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("然后，回调也可以是同步的。下面的"),s("code",[this._v("map")]),this._v("函数接受一个回调函数，它会被同步调用在每一个循环的迭代（数组元素）。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token function-variable function"}},[t._v("map")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" arr"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{attrs:{class:"token operator"}},[t._v("++")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    result"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("push")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token function"}},[t._v("callback")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result"),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("map")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("3")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("4")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" n "),a("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// [2, 4, 6, 8, 10]")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("函数在 JavaScript 中是一类对象。")]),this._v(" "),s("li",[this._v("回调 vs Promise")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"在-javascript-中，你是怎么拷贝一个对象的？intermediate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-javascript-中，你是怎么拷贝一个对象的？intermediate","aria-hidden":"true"}},[this._v("#")]),this._v(" 在 JavaScript 中，你是怎么拷贝一个对象的？"),s("sup",{staticStyle:{color:"green"}},[this._v("INTERMEDIATE")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" a"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("1")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("2")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" shallowClone "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("...")]),t._v("obj "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[a("code",[t._v("JSON.parse(JSON.stringify(obj))")]),t._v(" 可以用来深拷贝一个简单的对象，但是它占用CPU资源，并且只能接受有效的 JSON 结构。（因此它排除了函数以及不允许循环引用。）")]),t._v(" "),a("li",[a("code",[t._v("Object.assign({}, obj)")]),t._v(" 是另外一种可选方案。")]),t._v(" "),a("li",[a("code",[t._v("Object.keys(obj).reduce((acc, key) => (acc[key] = obj[key], acc), {})")]),t._v(" 是另外一种比较冗余的选择，更深入地展示了深拷贝的概念。（这里初始值是一个空对象，之后进行一一拷贝）")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("JavaScript 传递对象只是传递引用的地址，这意味着拷贝嵌套的对象只是拷贝它们的引用地址，而不是它们的字面量。")]),this._v(" "),s("li",[this._v("相同的方法可以用来合并两个对象。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"在-javascript-中你是怎么比较两个对象是否相等？intermediate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-javascript-中你是怎么比较两个对象是否相等？intermediate","aria-hidden":"true"}},[this._v("#")]),this._v(" 在 JavaScript 中你是怎么比较两个对象是否相等？"),s("sup",{staticStyle:{color:"green"}},[this._v("INTERMEDIATE")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("即使两个不同的对象具有相同的属性和值，当使用"),s("code",[this._v("==")]),this._v("或"),s("code",[this._v("===")]),this._v("时，它们也不能被认为相等。这是因为它们是通过引用地址（内存空间）来比较的，不像原始类型只是比较值的相等。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("为了测试两个对象是否在结构上相等，我们需要一个助手函数。它会遍历每个对象的自身属性，并测试它们的属性值是否相等，包括嵌套的对象。可选地，通过传递 "),s("code",[this._v("true")]),this._v(" 作为第三个参数来决定对象的原型可能也需要被测试是否相等。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("isDeepEqual")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj2"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" testPrototypes "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1 "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" obj2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 原始值")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj1 "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"function"')]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj2 "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"function"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" obj2"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("toString")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1 "),a("span",{attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Date")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" obj2 "),a("span",{attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" obj1"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getTime")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" obj2"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getTime")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Object"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("call")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("!==")]),t._v(" Object"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toString"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("call")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" obj1 "),a("span",{attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"object"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" prototypesAreEqual "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" testPrototypes\n    "),a("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("isDeepEqual")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        Object"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        Object"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getPrototypeOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj1Props "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getOwnPropertyNames")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj2Props "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getOwnPropertyNames")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj2"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    obj1Props"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" obj2Props"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 属性长度")]),t._v("\n    prototypesAreEqual "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 原型比较")]),t._v("\n    obj1Props"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("every")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prop "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("isDeepEqual")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj1"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("prop"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" obj2"),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("prop"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 属性值比较")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("像字符串、数字这样的原始值类型比较的是它们的字面量值。")]),this._v(" "),s("li",[this._v("相反，对象则通过比较它们的引用值（在内存中的地址）。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"什么是-cors？intermediate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-cors？intermediate","aria-hidden":"true"}},[this._v("#")]),this._v(" 什么是 CORS？"),s("sup",{staticStyle:{color:"green"}},[this._v("INTERMEDIATE")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("code",[this._v("Cross-Origin Resource Sharing")]),this._v("(跨域资源共享) 或 CORS 是一种机制，它使用额外的 HTTP 头部授予浏览器权限访问来自与 Web 应用不同域的服务器上的资源。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("一个跨域请求的例子是一个 web 应用的地址是 "),s("code",[this._v("http://mydomain.com")]),this._v("，然后使用 ajax 技术向 "),s("code",[this._v("http://yourdomain.com")]),this._v("请求数据。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("因为安全的原因，浏览器限制由 JavaScript 发起的跨域 HTTP 请求。"),s("code",[this._v("XMLHttpRequest")]),this._v(" 和 "),s("code",[this._v("fetch")]),this._v(" 遵循同源策略，这意味着一个 web\n应用使用这些 API 只能从相同的域的可被访问的应用请求 HTTP 资源。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("CORS 行为不是一个 bug，它是一个安全机制来保护用户的信息。")]),this._v(" "),s("li",[this._v("CORS 被设计用来在用户无意中从请求的合法网站到访问恶意网站时，阻止恶意网站去窃取用户的个信息或者是做一些违背用户的意愿的操作。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"dom-是什么-？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-是什么-？","aria-hidden":"true"}},[this._v("#")]),this._v(" DOM 是什么 ？")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ul",[a("li",[t._v("DOM 被设计为独立于任何特定的编程语言，这样使得文档的结构性代表可以提供一个单一、一致的 API 访问。")]),t._v(" "),a("li",[t._v("随着页面的加载，DOM 在浏览器中是逐渐地被构建出来的，这也是为什么要把脚本"),a("code",[t._v("script")]),t._v(" 标签放到页面的底部、带有 "),a("code",[t._v("defer")]),t._v(" 属性的 "),a("code",[t._v("<head>")]),t._v(" 标签，或者放进 "),a("code",[t._v("DOMContentLoaded")]),t._v(" 回调函数中避免出错。操作 DOM 的脚本应该在相关的 DOM 节点被构建出来才运行避免报错。")]),t._v(" "),a("li",[a("code",[t._v("domcument.getElementById()")]),t._v(" 和 "),a("code",[t._v("document.querySelector()")]),t._v(" 是常见的选择 DOM 节点的函数。")]),t._v(" "),a("li",[t._v("通过给一个节点的 "),a("code",[t._v("innerHTML")]),t._v("属性设置一个新值及HTML 解析器运行字符串，提供了一种很简便的方式来添加动态的HTML内容进一个节点。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"事件委托是什么，为什么它是有用的呢？你可以用一个例子来说明怎么用吗？intermediate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件委托是什么，为什么它是有用的呢？你可以用一个例子来说明怎么用吗？intermediate","aria-hidden":"true"}},[this._v("#")]),this._v(" 事件委托是什么，为什么它是有用的呢？你可以用一个例子来说明怎么用吗？"),s("sup",{staticStyle:{color:"green"}},[this._v("INTERMEDIATE")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("DOM 事件提供通过初始化事件 "),s("code",[this._v("Event.target")]),this._v("发起事件的元素的有用信息，这样允许父元素处理行为，好像目标元素正在监听事件一样，而不是所有的父亲的子元素或者是父元素本身。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("它只需要注册一个元素的事件处理程序而不是成千上万个元素，从而提升了性能和减少内存的消耗。")]),this._v(" "),s("li",[this._v("如果子元素是动态添加到父元素，则无需为它们注册新的事件侦听器。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("querySelectorAll")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"button"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("forEach")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("button "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  button"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"click"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" handleButtonClick"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("addEventListener")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"click"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("closest")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"button"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("handleButtonClick")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("事件冒泡和事件捕获的区别。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"javascript-中的表达式和声明之间有什么区别？intermediate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-中的表达式和声明之间有什么区别？intermediate","aria-hidden":"true"}},[this._v("#")]),this._v(" JavaScript 中的表达式和声明之间有什么区别？"),s("sup",{staticStyle:{color:"green"}},[this._v("INTERMEDIATE")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("表达式：生成一个值。")]),this._v(" "),s("li",[this._v("语句：执行动作。")]),this._v(" "),s("li",[this._v("表达式语句：生成一个值并执行一个动作。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("如果你可以打印或者将其赋值给一个变量，那么它就是一个表达式。否则，它就是一个语句。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#声明","aria-hidden":"true"}},[this._v("#")]),this._v(" 声明")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("let")]),t._v(" x "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("declaration")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 将 x 指定为 y 的绝对值")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x\n"),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("y "),a("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" y\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("y\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("在上面的代码中唯一的表达式是 "),a("code",[t._v("y>-=0")]),t._v("，它生成一个值为 "),a("code",[t._v("true")]),t._v(" 或者 "),a("code",[t._v("false")]),t._v("的值。\n"),t._v("\n代码的其他部分不会产生值。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"表达式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表达式","aria-hidden":"true"}},[this._v("#")]),this._v(" 表达式")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("5")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// => 10")]),t._v("\n"),a("span",{attrs:{class:"token function"}},[t._v("lastCharacter")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v('"input"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v('// => "t"')]),t._v("\n"),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// => true")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"表达式语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表达式语句","aria-hidden":"true"}},[this._v("#")]),this._v(" 表达式语句")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("//  将 x 指定为 y 的绝对值")]),t._v("\n"),a("span",{attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" y "),a("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token operator"}},[t._v("?")]),t._v(" y "),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("y\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这是既是表达式又是语句，因为我们将变量 "),s("code",[this._v("x")]),this._v("（声明）声明评估（表达式）。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"面试官想听到"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面试官想听到","aria-hidden":"true"}},[this._v("#")]),this._v(" 面试官想听到")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考资料")])}],!1,null,null,null);e.options.__file="README.md";s.default=e.exports}}]);